CREATE OR REPLACE TRIGGER T_AUD_ORDEN_PAGO
 AFTER INSERT OR UPDATE OR DELETE 
 ON ORDEN_PAGO
 FOR EACH ROW 
DECLARE
  cTableName CONSTANT VARCHAR2(100) := 'ORDEN_PAGO';
  cHost      CONSTANT VARCHAR2(200) := NVL(SYS_CONTEXT('USERENV', 'HOST'), 'N/A');
  cModule    CONSTANT VARCHAR2(200) := NVL(SYS_CONTEXT('USERENV', 'MODULE'), 'N/A');
  cSysdate   CONSTANT DATE := SYSDATE;
  vOper      VARCHAR2(6);
  vPreFijo   VARCHAR2(3);
  vIdAudit   NUMBER(18);
BEGIN

 -- BUSCAMOS LA SECUENCIA PARA EL ID DE LA TABLA TRAZO_AUDITORIA --
 SELECT SEQ_TRAZO_AUDITORIA.NEXTVAL INTO vIdAudit FROM DUAL;

 IF INSERTING THEN 
   vOper := 'INSERT';
   INSERT INTO TRAZO_AUDITORIA(ID, FEC_OPERA, NOMBRE_TABLA, USUARIO, OPERACION, HOST, MODULO, DATO)
   VALUES(vIdAudit, cSysdate, cTableName, USER, vOper, cHost, cModule, '<?xml version="1.0"?>
<ORDEN_PAGO>
  <ROW>
    <ID PK="TRUE" >'||:NEW.ID||'</ID>
    <VERSION>'||:NEW.VERSION||'</VERSION>
    <CODIGO>'||:NEW.CODIGO||'</CODIGO>
    <CONCEPTO_DESDE>'||:NEW.CONCEPTO_DESDE||'</CONCEPTO_DESDE>
    <MES>'||:NEW.MES||'</MES>
    <ANO>'||:NEW.ANO||'</ANO>
    <NUMERO_SOLICITUD>'||:NEW.NUMERO_SOLICITUD||'</NUMERO_SOLICITUD>
    <TIPO_PRESUPUESTO>'||:NEW.TIPO_PRESUPUESTO||'</TIPO_PRESUPUESTO>
    <ESTADO>'||:NEW.ESTADO||'</ESTADO>
    <CUENTA>'||:NEW.CUENTA||'</CUENTA>
    <FECHA_TRANSICION>'||TO_CHAR(:NEW.FECHA_TRANSICION, 'YYYYMMDDHH24MISS')||'</FECHA_TRANSICION>
    <USUARIO>'||:NEW.USUARIO||'</USUARIO>
  </ROW>
</ORDEN_PAGO>'
);

 ELSIF UPDATING OR DELETING THEN 
   IF UPDATING THEN 
     vOper := 'UPDATE';
   END IF;

   IF DELETING THEN 
     vOper := 'DELETE';
   END IF;

   INSERT INTO TRAZO_AUDITORIA(ID, FEC_OPERA, NOMBRE_TABLA, USUARIO, OPERACION, HOST, MODULO, DATO)
   VALUES(vIdAudit, cSysdate, cTableName, USER, vOper, cHost, cModule, '<?xml version="1.0"?>
<ORDEN_PAGO>
  <ROW>
    <ID PK="TRUE" >'||:OLD.ID||'</ID>
    <VERSION>'||:OLD.VERSION||'</VERSION>
    <CODIGO>'||:OLD.CODIGO||'</CODIGO>
    <CONCEPTO_DESDE>'||:OLD.CONCEPTO_DESDE||'</CONCEPTO_DESDE>
    <MES>'||:OLD.MES||'</MES>
    <ANO>'||:OLD.ANO||'</ANO>
    <NUMERO_SOLICITUD>'||:OLD.NUMERO_SOLICITUD||'</NUMERO_SOLICITUD>
    <TIPO_PRESUPUESTO>'||:OLD.TIPO_PRESUPUESTO||'</TIPO_PRESUPUESTO>
    <ESTADO>'||:OLD.ESTADO||'</ESTADO>
    <CUENTA>'||:OLD.CUENTA||'</CUENTA>
    <FECHA_TRANSICION>'||TO_CHAR(:OLD.FECHA_TRANSICION, 'YYYYMMDDHH24MISS')||'</FECHA_TRANSICION>
    <USUARIO>'||:OLD.USUARIO||'</USUARIO>
  </ROW>
</ORDEN_PAGO>'
);
 END IF;

EXCEPTION
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20000 , 'Error en el trigger T_AUD_ORDEN_PAGO'|| SQLERRM);
END;

/